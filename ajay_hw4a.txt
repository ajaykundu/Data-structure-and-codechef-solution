void right_veiw(treenode* root)
{   //cout<<"hello "<<endl;
  if(root==NULL)
    return ;
    queue<treenode*> q;
 
    q.push(root);
    q.push(NULL);
    cout<<root->data<<" ";

    while(!q.empty())
    {
          root=q.front();
          
          q.pop();

          if(root!=NULL)
          {
         
              // cout<<root->data<<" ";
            if(root->rigth!=NULL)
                q.push(root->rigth);
               if(root->left!=NULL)
                q.push(root->left);
               
          }
          else
          {
          //  cout<<"hello"<<endl;
   //cout<<endl;
            
             if(!q.empty())
             {  

               cout<<(q.front())->data<<" ";
              q.push(NULL);
             }
          }
    }
   cout<<endl;
}

void right_veiwRAux(treenode* root,int level,int &maxlevel)
{
    if(root==NULL)
      return;
    if(level>maxlevel)
    {
      cout<<root->data<<" ";
      maxlevel=level;
    }
    right_veiwRAux(root->rigth,level+1,maxlevel);
    right_veiwRAux(root->left,level+1,maxlevel);
}

void right_veiwR(treenode* root)
{
  int maxlevel=0;
  right_veiwRAux(root,1,maxlevel);
}
